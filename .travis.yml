# The first thing is to tell which VM environment we want the test to be run on.
# It dosen't quite matter for Haxe, just choose one of the targets our project support (e.g. PHP),
# and than apt-get install the others (e.g. Neko, C++).
# For more info, see http://about.travis-ci.org/docs/user/ci-environment/
language: node_js

env:
    matrix:
    - TARGET=cpp
#    - TARGET=cs
    - TARGET=java
#    - TARGET=js
    - TARGET=neko
    - TARGET=nodejs
#    - TARGET=php
#    - TARGET=flash

before_install:
  # Install Haxe
  - wget http://www.openfl.org/builds/haxe/haxe-3.1.3-linux-installer.tar.gz -O - | tar -xz
  - sudo sh install-haxe.sh -y

  # haxelib dependencies for all targets
  - haxelib install thx.core
  - haxelib install thx.promise
  - haxelib install buddy
  - haxelib install hxssl
  - haxelib install nodejs
  - haxelib install utest


  # apt packages for each target
  - sudo apt-get update
  - sh -c "if [ '$TARGET' = 'cpp' ]; then sudo apt-get install gcc-multilib g++-multilib -y; fi"
  - sh -c "if [ '$TARGET' = 'cs' ]; then sudo apt-get install mono-devel -y; fi"
  - sh -c "if [ '$TARGET' = 'js' ]; then sudo apt-get install phantomjs -y; fi"
  - sh -c "if [ '$TARGET' = 'php' ]; then sudo apt-get install php5-cli -y; fi"
  - sh -c "if [ '$TARGET' = 'flash' ]; then chmod +x ./flash-travis-setup.sh && ./flash-travis-setup.sh; fi"

  # haxelib dependencies for each target
  - sh -c "if [ '$TARGET' = 'cpp' ]; then haxelib install hxcpp; fi"
  - sh -c "if [ '$TARGET' = 'java' ]; then haxelib install hxjava; fi"
  - sh -c "if [ '$TARGET' = 'cs' ]; then haxelib install hxcs; fi"

# Run the test!
script:
  - haxe buddy.${TARGET}.hxml

after_script:
  - ls -l bin

branches:
      only:
          - master
